# MIT License
# 
# Copyright (c) 2023 Advanced Micro Devices, Inc.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file has been autogenerated, do not modify.

__author__ = "Advanced Micro Devices, Inc. <rocm-llvm-python.maintainer@amd.com>"

from ._version import *
ROCM_LLVM_PYTHON_VERSION = 0
ROCM_LLVM_PYTHON_VERSION_NAME = rocm_llvm_version_name = "0.0.0-"
ROCM_LLVM_PYTHON_VERSION_TUPLE = rocm_llvm_version_tuple = (0,0,0,"")


from . import _util
try:
    from . import llvm_config
except ImportError:
    pass # may have been excluded from build
try:
    from . import analysis
except ImportError:
    pass # may have been excluded from build
try:
    from . import bitreader
except ImportError:
    pass # may have been excluded from build
try:
    from . import bitwriter
except ImportError:
    pass # may have been excluded from build
try:
    from . import blake3
except ImportError:
    pass # may have been excluded from build
try:
    from . import comdat
except ImportError:
    pass # may have been excluded from build
try:
    from . import core
except ImportError:
    pass # may have been excluded from build
try:
    from . import datatypes
except ImportError:
    pass # may have been excluded from build
try:
    from . import debuginfo
except ImportError:
    pass # may have been excluded from build
try:
    from . import disassembler
except ImportError:
    pass # may have been excluded from build
try:
    from . import disassemblertypes
except ImportError:
    pass # may have been excluded from build
try:
    from . import error
except ImportError:
    pass # may have been excluded from build
try:
    from . import errorhandling
except ImportError:
    pass # may have been excluded from build
try:
    from . import executionengine
except ImportError:
    pass # may have been excluded from build
try:
    from . import initialization
except ImportError:
    pass # may have been excluded from build
try:
    from . import irreader
except ImportError:
    pass # may have been excluded from build
try:
    from . import linker
except ImportError:
    pass # may have been excluded from build
try:
    from . import lljit
except ImportError:
    pass # may have been excluded from build
try:
    from . import lto
except ImportError:
    pass # may have been excluded from build
try:
    from . import object
except ImportError:
    pass # may have been excluded from build
try:
    from . import orc
except ImportError:
    pass # may have been excluded from build
try:
    from . import orcee
except ImportError:
    pass # may have been excluded from build
try:
    from . import remarks
except ImportError:
    pass # may have been excluded from build
try:
    from . import support
except ImportError:
    pass # may have been excluded from build
try:
    from . import target
except ImportError:
    pass # may have been excluded from build
try:
    from . import targetmachine
except ImportError:
    pass # may have been excluded from build
try:
    from . import instcombine
except ImportError:
    pass # may have been excluded from build
try:
    from . import ipo
except ImportError:
    pass # may have been excluded from build
try:
    from . import passbuilder
except ImportError:
    pass # may have been excluded from build
try:
    from . import passmanagerbuilder
except ImportError:
    pass # may have been excluded from build
try:
    from . import scalar
except ImportError:
    pass # may have been excluded from build
try:
    from . import utils
except ImportError:
    pass # may have been excluded from build
try:
    from . import vectorize
except ImportError:
    pass # may have been excluded from build
try:
    from . import types
except ImportError:
    pass # may have been excluded from build