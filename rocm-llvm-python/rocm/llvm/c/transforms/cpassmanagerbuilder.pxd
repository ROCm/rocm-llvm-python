# MIT License
#
# Copyright (c) 2023-2024 Advanced Micro Devices, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file has been autogenerated, do not modify.

from libc.stdint cimport *
ctypedef bint _Bool # bool is not a reserved keyword in C, _Bool is
from rocm.llvm.c.ctypes cimport *
cdef extern from "llvm-c/Transforms/PassManagerBuilder.h":

    cdef struct LLVMOpaquePassManagerBuilder:
        pass

    ctypedef LLVMOpaquePassManagerBuilder * LLVMPassManagerBuilderRef

# See llvm::PassManagerBuilder. */
cdef LLVMPassManagerBuilderRef LLVMPassManagerBuilderCreate()



cdef void LLVMPassManagerBuilderDispose(LLVMPassManagerBuilderRef PMB)


# See llvm::PassManagerBuilder::OptLevel. */
cdef void LLVMPassManagerBuilderSetOptLevel(LLVMPassManagerBuilderRef PMB,unsigned int OptLevel)


# See llvm::PassManagerBuilder::SizeLevel. */
cdef void LLVMPassManagerBuilderSetSizeLevel(LLVMPassManagerBuilderRef PMB,unsigned int SizeLevel)


# See llvm::PassManagerBuilder::DisableUnitAtATime. */
cdef void LLVMPassManagerBuilderSetDisableUnitAtATime(LLVMPassManagerBuilderRef PMB,int Value)


# See llvm::PassManagerBuilder::DisableUnrollLoops. */
cdef void LLVMPassManagerBuilderSetDisableUnrollLoops(LLVMPassManagerBuilderRef PMB,int Value)


# See llvm::PassManagerBuilder::DisableSimplifyLibCalls */
cdef void LLVMPassManagerBuilderSetDisableSimplifyLibCalls(LLVMPassManagerBuilderRef PMB,int Value)


# See llvm::PassManagerBuilder::Inliner. */
cdef void LLVMPassManagerBuilderUseInlinerWithThreshold(LLVMPassManagerBuilderRef PMB,unsigned int Threshold)


# See llvm::PassManagerBuilder::populateFunctionPassManager. */
cdef void LLVMPassManagerBuilderPopulateFunctionPassManager(LLVMPassManagerBuilderRef PMB,LLVMPassManagerRef PM)


# See llvm::PassManagerBuilder::populateModulePassManager. */
cdef void LLVMPassManagerBuilderPopulateModulePassManager(LLVMPassManagerBuilderRef PMB,LLVMPassManagerRef PM)
