# MIT License
# 
# Copyright (c) 2023 Advanced Micro Devices, Inc.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file has been autogenerated, do not modify.

cimport hip._util.posixloader as loader
cdef void* _lib_handle = NULL

cdef void __init() nogil:
    global _lib_handle
    if _lib_handle == NULL:
        with gil:
            _lib_handle = loader.open_library("librocmllvm.so")

cdef void __init_symbol(void** result, const char* name) nogil:
    global _lib_handle
    if _lib_handle == NULL:
        __init()
    if result[0] == NULL:
        with gil:
            result[0] = loader.load_symbol(_lib_handle, name) 


cdef void* _LLVMPassManagerBuilderCreate__funptr = NULL
# See llvm::PassManagerBuilder. */
cdef LLVMPassManagerBuilderRef LLVMPassManagerBuilderCreate() nogil:
    global _LLVMPassManagerBuilderCreate__funptr
    __init_symbol(&_LLVMPassManagerBuilderCreate__funptr,"LLVMPassManagerBuilderCreate")
    return (<LLVMPassManagerBuilderRef (*)() nogil> _LLVMPassManagerBuilderCreate__funptr)()


cdef void* _LLVMPassManagerBuilderDispose__funptr = NULL
cdef void LLVMPassManagerBuilderDispose(LLVMPassManagerBuilderRef PMB) nogil:
    global _LLVMPassManagerBuilderDispose__funptr
    __init_symbol(&_LLVMPassManagerBuilderDispose__funptr,"LLVMPassManagerBuilderDispose")
    return (<void (*)(LLVMPassManagerBuilderRef) nogil> _LLVMPassManagerBuilderDispose__funptr)(PMB)


cdef void* _LLVMPassManagerBuilderSetOptLevel__funptr = NULL
# See llvm::PassManagerBuilder::OptLevel. */
cdef void LLVMPassManagerBuilderSetOptLevel(LLVMPassManagerBuilderRef PMB,unsigned int OptLevel) nogil:
    global _LLVMPassManagerBuilderSetOptLevel__funptr
    __init_symbol(&_LLVMPassManagerBuilderSetOptLevel__funptr,"LLVMPassManagerBuilderSetOptLevel")
    return (<void (*)(LLVMPassManagerBuilderRef,unsigned int) nogil> _LLVMPassManagerBuilderSetOptLevel__funptr)(PMB,OptLevel)


cdef void* _LLVMPassManagerBuilderSetSizeLevel__funptr = NULL
# See llvm::PassManagerBuilder::SizeLevel. */
cdef void LLVMPassManagerBuilderSetSizeLevel(LLVMPassManagerBuilderRef PMB,unsigned int SizeLevel) nogil:
    global _LLVMPassManagerBuilderSetSizeLevel__funptr
    __init_symbol(&_LLVMPassManagerBuilderSetSizeLevel__funptr,"LLVMPassManagerBuilderSetSizeLevel")
    return (<void (*)(LLVMPassManagerBuilderRef,unsigned int) nogil> _LLVMPassManagerBuilderSetSizeLevel__funptr)(PMB,SizeLevel)


cdef void* _LLVMPassManagerBuilderSetDisableUnitAtATime__funptr = NULL
# See llvm::PassManagerBuilder::DisableUnitAtATime. */
cdef void LLVMPassManagerBuilderSetDisableUnitAtATime(LLVMPassManagerBuilderRef PMB,int Value) nogil:
    global _LLVMPassManagerBuilderSetDisableUnitAtATime__funptr
    __init_symbol(&_LLVMPassManagerBuilderSetDisableUnitAtATime__funptr,"LLVMPassManagerBuilderSetDisableUnitAtATime")
    return (<void (*)(LLVMPassManagerBuilderRef,int) nogil> _LLVMPassManagerBuilderSetDisableUnitAtATime__funptr)(PMB,Value)


cdef void* _LLVMPassManagerBuilderSetDisableUnrollLoops__funptr = NULL
# See llvm::PassManagerBuilder::DisableUnrollLoops. */
cdef void LLVMPassManagerBuilderSetDisableUnrollLoops(LLVMPassManagerBuilderRef PMB,int Value) nogil:
    global _LLVMPassManagerBuilderSetDisableUnrollLoops__funptr
    __init_symbol(&_LLVMPassManagerBuilderSetDisableUnrollLoops__funptr,"LLVMPassManagerBuilderSetDisableUnrollLoops")
    return (<void (*)(LLVMPassManagerBuilderRef,int) nogil> _LLVMPassManagerBuilderSetDisableUnrollLoops__funptr)(PMB,Value)


cdef void* _LLVMPassManagerBuilderSetDisableSimplifyLibCalls__funptr = NULL
# See llvm::PassManagerBuilder::DisableSimplifyLibCalls */
cdef void LLVMPassManagerBuilderSetDisableSimplifyLibCalls(LLVMPassManagerBuilderRef PMB,int Value) nogil:
    global _LLVMPassManagerBuilderSetDisableSimplifyLibCalls__funptr
    __init_symbol(&_LLVMPassManagerBuilderSetDisableSimplifyLibCalls__funptr,"LLVMPassManagerBuilderSetDisableSimplifyLibCalls")
    return (<void (*)(LLVMPassManagerBuilderRef,int) nogil> _LLVMPassManagerBuilderSetDisableSimplifyLibCalls__funptr)(PMB,Value)


cdef void* _LLVMPassManagerBuilderUseInlinerWithThreshold__funptr = NULL
# See llvm::PassManagerBuilder::Inliner. */
cdef void LLVMPassManagerBuilderUseInlinerWithThreshold(LLVMPassManagerBuilderRef PMB,unsigned int Threshold) nogil:
    global _LLVMPassManagerBuilderUseInlinerWithThreshold__funptr
    __init_symbol(&_LLVMPassManagerBuilderUseInlinerWithThreshold__funptr,"LLVMPassManagerBuilderUseInlinerWithThreshold")
    return (<void (*)(LLVMPassManagerBuilderRef,unsigned int) nogil> _LLVMPassManagerBuilderUseInlinerWithThreshold__funptr)(PMB,Threshold)


cdef void* _LLVMPassManagerBuilderPopulateFunctionPassManager__funptr = NULL
# See llvm::PassManagerBuilder::populateFunctionPassManager. */
cdef void LLVMPassManagerBuilderPopulateFunctionPassManager(LLVMPassManagerBuilderRef PMB,LLVMPassManagerRef PM) nogil:
    global _LLVMPassManagerBuilderPopulateFunctionPassManager__funptr
    __init_symbol(&_LLVMPassManagerBuilderPopulateFunctionPassManager__funptr,"LLVMPassManagerBuilderPopulateFunctionPassManager")
    return (<void (*)(LLVMPassManagerBuilderRef,LLVMPassManagerRef) nogil> _LLVMPassManagerBuilderPopulateFunctionPassManager__funptr)(PMB,PM)


cdef void* _LLVMPassManagerBuilderPopulateModulePassManager__funptr = NULL
# See llvm::PassManagerBuilder::populateModulePassManager. */
cdef void LLVMPassManagerBuilderPopulateModulePassManager(LLVMPassManagerBuilderRef PMB,LLVMPassManagerRef PM) nogil:
    global _LLVMPassManagerBuilderPopulateModulePassManager__funptr
    __init_symbol(&_LLVMPassManagerBuilderPopulateModulePassManager__funptr,"LLVMPassManagerBuilderPopulateModulePassManager")
    return (<void (*)(LLVMPassManagerBuilderRef,LLVMPassManagerRef) nogil> _LLVMPassManagerBuilderPopulateModulePassManager__funptr)(PMB,PM)
