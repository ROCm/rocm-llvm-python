# MIT License
#
# Copyright (c) 2021-2025 Advanced Micro Devices, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


# This file has been autogenerated, do not modify.

from libc.stdint cimport *
ctypedef bint _Bool # bool is not a reserved keyword in C, _Bool is
cdef extern from "llvm-c/Error.h":

    cdef struct LLVMOpaqueError:
        pass

    ctypedef LLVMOpaqueError * LLVMErrorRef

    ctypedef const void * LLVMErrorTypeId

# 
# Returns the type id for the given error instance, which must be a failure
# value (i.e. non-null).
cdef const void * LLVMGetErrorTypeId(LLVMErrorRef Err)


# 
# Dispose of the given error without handling it. This operation consumes the
# error, and the given LLVMErrorRef value is not usable once this call returns.
# Note: This method *only* needs to be called if the error is not being passed
# to some other consuming operation, e.g. LLVMGetErrorMessage.
cdef void LLVMConsumeError(LLVMErrorRef Err)


# 
# Returns the given string's error message. This operation consumes the error,
# and the given LLVMErrorRef value is not usable once this call returns.
# The caller is responsible for disposing of the string by calling
# LLVMDisposeErrorMessage.
cdef char * LLVMGetErrorMessage(LLVMErrorRef Err)


# 
# Dispose of the given error message.
cdef void LLVMDisposeErrorMessage(char * ErrMsg)


# 
# Returns the type id for llvm StringError.
cdef const void * LLVMGetStringErrorTypeId()


# 
# Create a StringError.
cdef LLVMErrorRef LLVMCreateStringError(const char * ErrMsg)
